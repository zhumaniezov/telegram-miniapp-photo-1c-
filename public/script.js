const input = document.getElementById('cameraInput');
const preview = document.getElementById('preview');
const sendBtn = document.getElementById('sendBtn');
const status = document.getElementById('status');
const filenameText = document.getElementById('filename');

const scanBtn = document.getElementById('scanBtn');
const qrReader = document.getElementById('qr-reader');
const pinflInput = document.getElementById('pinfl');
const birthdateInput = document.getElementById('birthdate');

let selectedFile = null;

// QR-—Å–∫–∞–Ω–µ—Ä
scanBtn.addEventListener('click', () => {
  qrReader.style.display = 'block';
  const html5QrCode = new Html5Qrcode("qr-reader");

  const config = { fps: 10, qrbox: 250 };

  html5QrCode.start(
    { facingMode: "environment" }, // üîÑ –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–Ω—é—é –∫–∞–º–µ—Ä—É
    config,
    (decodedText, decodedResult) => {
      html5QrCode.stop().then(() => {
        qrReader.style.display = 'none';

        const raw = decodedText.trim();

        // –ò—â–µ–º 14 —Ü–∏—Ñ—Ä –ø–µ—Ä–µ–¥ –∑–Ω–∞–∫–æ–º "<"
          const pinflMatch = raw.match(/(\d{14})</);
          if (pinflMatch) {
            const pinfl = pinflMatch[1]; // –ø—Ä–∏–º–µ—Ä: 31805958660010
            pinflInput.value = pinfl;

            // –ü–ò–ù–§–õ: 1-—è —Ü–∏—Ñ—Ä–∞ = –ø–æ–ª (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º)
            //        2‚Äì7 = –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è (–î–î–ú–ú–ì–ì)
            const day = pinfl.substring(1, 3);
            const month = pinfl.substring(3, 5);
            const yearSuffix = pinfl.substring(5, 7);
            const fullYear = parseInt(yearSuffix, 10) > 30 ? '19' + yearSuffix : '20' + yearSuffix;
            const birthdate = `${day}.${month}.${fullYear}`;
            birthdateInput.value = birthdate;

            status.textContent = '‚úÖ –ü–ò–ù–§–õ –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è —Å—á–∏—Ç–∞–Ω—ã';
          } else {
            status.textContent = '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ü–ò–ù–§–õ –∏–∑ QR-–∫–æ–¥–∞';
          }
        });
      },
      errorMessage => {
        // –º–æ–∂–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å
      }
    ).catch(err => {
      status.textContent = '–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–∞–º–µ—Ä—ã: ' + err;
    });
  }).catch(err => {
    status.textContent = '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–º–µ—Ä';
  });
});

// –§–æ—Ç–æ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞
input.addEventListener('change', () => {
  const file = input.files[0];
  if (file) {
    selectedFile = file;
    preview.src = URL.createObjectURL(file);
    preview.style.display = 'block';
    filenameText.textContent = file.name;
    sendBtn.disabled = false;
    status.textContent = '';
  }
});

sendBtn.addEventListener('click', async () => {
  if (!selectedFile) return;

  sendBtn.disabled = true;
  status.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ...';

  const formData = new FormData();
  formData.append('photo', selectedFile);

  try {
    const response = await fetch('/upload', {
      method: 'POST',
      body: formData,
    });
    const result = await response.json();
    status.textContent = '‚úÖ –§–æ—Ç–æ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ 1–°!';
    sendBtn.disabled = false;
  } catch (error) {
    status.textContent = '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ';
    console.error(error);
    sendBtn.disabled = false;
  }
});
